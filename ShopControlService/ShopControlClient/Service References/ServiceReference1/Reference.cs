//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopControlClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientCatalog", Namespace="http://schemas.datacontract.org/2004/07/ShopControlService")]
    [System.SerializableAttribute()]
    public partial class ClientCatalog : ShopControlClient.ServiceReference1.EntityId {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TotalSumField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((this.CardNumberField.Equals(value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripton {
            get {
                return this.DescriptonField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptonField, value) != true)) {
                    this.DescriptonField = value;
                    this.RaisePropertyChanged("Descripton");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TotalSum {
            get {
                return this.TotalSumField;
            }
            set {
                if ((this.TotalSumField.Equals(value) != true)) {
                    this.TotalSumField = value;
                    this.RaisePropertyChanged("TotalSum");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityId", Namespace="http://schemas.datacontract.org/2004/07/ShopControlService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShopControlClient.ServiceReference1.ManufacturerCatalog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShopControlClient.ServiceReference1.ProductGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShopControlClient.ServiceReference1.ProductsCatalog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ShopControlClient.ServiceReference1.ClientCatalog))]
    public partial class EntityId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManufacturerCatalog", Namespace="http://schemas.datacontract.org/2004/07/ShopControlService")]
    [System.SerializableAttribute()]
    public partial class ManufacturerCatalog : ShopControlClient.ServiceReference1.EntityId {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EDERPOUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRealizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MFOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SumDebtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebSiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bank {
            get {
                return this.BankField;
            }
            set {
                if ((object.ReferenceEquals(this.BankField, value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EDERPOU {
            get {
                return this.EDERPOUField;
            }
            set {
                if ((object.ReferenceEquals(this.EDERPOUField, value) != true)) {
                    this.EDERPOUField = value;
                    this.RaisePropertyChanged("EDERPOU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INN {
            get {
                return this.INNField;
            }
            set {
                if ((object.ReferenceEquals(this.INNField, value) != true)) {
                    this.INNField = value;
                    this.RaisePropertyChanged("INN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRealization {
            get {
                return this.IsRealizationField;
            }
            set {
                if ((this.IsRealizationField.Equals(value) != true)) {
                    this.IsRealizationField = value;
                    this.RaisePropertyChanged("IsRealization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MFO {
            get {
                return this.MFOField;
            }
            set {
                if ((object.ReferenceEquals(this.MFOField, value) != true)) {
                    this.MFOField = value;
                    this.RaisePropertyChanged("MFO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RR {
            get {
                return this.RRField;
            }
            set {
                if ((object.ReferenceEquals(this.RRField, value) != true)) {
                    this.RRField = value;
                    this.RaisePropertyChanged("RR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SumDebt {
            get {
                return this.SumDebtField;
            }
            set {
                if ((this.SumDebtField.Equals(value) != true)) {
                    this.SumDebtField = value;
                    this.RaisePropertyChanged("SumDebt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebSite {
            get {
                return this.WebSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebSiteField, value) != true)) {
                    this.WebSiteField = value;
                    this.RaisePropertyChanged("WebSite");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductGroup", Namespace="http://schemas.datacontract.org/2004/07/ShopControlService")]
    [System.SerializableAttribute()]
    public partial class ProductGroup : ShopControlClient.ServiceReference1.EntityId {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShopControlClient.ServiceReference1.ProductGroup ParentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShopControlClient.ServiceReference1.ProductGroup Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductsCatalog", Namespace="http://schemas.datacontract.org/2004/07/ShopControlService")]
    [System.SerializableAttribute()]
    public partial class ProductsCatalog : ShopControlClient.ServiceReference1.EntityId {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdressPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShopControlClient.ServiceReference1.ProductGroup GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRealizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ShopControlClient.ServiceReference1.ManufacturerCatalog ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarkingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PurchasePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdressPhoto {
            get {
                return this.AdressPhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressPhotoField, value) != true)) {
                    this.AdressPhotoField = value;
                    this.RaisePropertyChanged("AdressPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShopControlClient.ServiceReference1.ProductGroup Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRealization {
            get {
                return this.IsRealizationField;
            }
            set {
                if ((this.IsRealizationField.Equals(value) != true)) {
                    this.IsRealizationField = value;
                    this.RaisePropertyChanged("IsRealization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ShopControlClient.ServiceReference1.ManufacturerCatalog Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Marking {
            get {
                return this.MarkingField;
            }
            set {
                if ((object.ReferenceEquals(this.MarkingField, value) != true)) {
                    this.MarkingField = value;
                    this.RaisePropertyChanged("Marking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PurchasePrice {
            get {
                return this.PurchasePriceField;
            }
            set {
                if ((this.PurchasePriceField.Equals(value) != true)) {
                    this.PurchasePriceField = value;
                    this.RaisePropertyChanged("PurchasePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewClient", ReplyAction="http://tempuri.org/IService/AddNewClientResponse")]
        void AddNewClient(string NameCl, string DescriptionCl, int DiscountCl, int CardNumberCl, string PhoneNumberCl, System.DateTime BirthDateCl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewClient", ReplyAction="http://tempuri.org/IService/AddNewClientResponse")]
        System.Threading.Tasks.Task AddNewClientAsync(string NameCl, string DescriptionCl, int DiscountCl, int CardNumberCl, string PhoneNumberCl, System.DateTime BirthDateCl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClientCatalogList", ReplyAction="http://tempuri.org/IService/ClientCatalogListResponse")]
        ShopControlClient.ServiceReference1.ClientCatalog[] ClientCatalogList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClientCatalogList", ReplyAction="http://tempuri.org/IService/ClientCatalogListResponse")]
        System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ClientCatalog[]> ClientCatalogListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClient", ReplyAction="http://tempuri.org/IService/UpdateClientResponse")]
        void UpdateClient(int IdCl, string NameCl, string DescriptionCl, int DiscountCl, int CardNumberCl, string PhoneNumberCl, System.DateTime BirthDateCl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClient", ReplyAction="http://tempuri.org/IService/UpdateClientResponse")]
        System.Threading.Tasks.Task UpdateClientAsync(int IdCl, string NameCl, string DescriptionCl, int DiscountCl, int CardNumberCl, string PhoneNumberCl, System.DateTime BirthDateCl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClientById", ReplyAction="http://tempuri.org/IService/FindClientByIdResponse")]
        ShopControlClient.ServiceReference1.ClientCatalog FindClientById(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindClientById", ReplyAction="http://tempuri.org/IService/FindClientByIdResponse")]
        System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ClientCatalog> FindClientByIdAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteClient", ReplyAction="http://tempuri.org/IService/DeleteClientResponse")]
        void DeleteClient(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteClient", ReplyAction="http://tempuri.org/IService/DeleteClientResponse")]
        System.Threading.Tasks.Task DeleteClientAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ManufacturerCatalogList", ReplyAction="http://tempuri.org/IService/ManufacturerCatalogListResponse")]
        ShopControlClient.ServiceReference1.ManufacturerCatalog[] ManufacturerCatalogList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ManufacturerCatalogList", ReplyAction="http://tempuri.org/IService/ManufacturerCatalogListResponse")]
        System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ManufacturerCatalog[]> ManufacturerCatalogListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewManufacturer", ReplyAction="http://tempuri.org/IService/AddNewManufacturerResponse")]
        void AddNewManufacturer(string NameMan, string PhoneMan, string EmailMan, string WebsiteMan, bool IsRealizMan, string INNMan, string EDRPOUMan, string MFOMan, string RRMan, string BankMan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewManufacturer", ReplyAction="http://tempuri.org/IService/AddNewManufacturerResponse")]
        System.Threading.Tasks.Task AddNewManufacturerAsync(string NameMan, string PhoneMan, string EmailMan, string WebsiteMan, bool IsRealizMan, string INNMan, string EDRPOUMan, string MFOMan, string RRMan, string BankMan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateManufacturer", ReplyAction="http://tempuri.org/IService/UpdateManufacturerResponse")]
        void UpdateManufacturer(int _id, string NameMan, string PhoneMan, string EmailMan, string WebsiteMan, bool IsRealizMan, string INNMan, string EDRPOUMan, string MFOMan, string RRMan, string BankMan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateManufacturer", ReplyAction="http://tempuri.org/IService/UpdateManufacturerResponse")]
        System.Threading.Tasks.Task UpdateManufacturerAsync(int _id, string NameMan, string PhoneMan, string EmailMan, string WebsiteMan, bool IsRealizMan, string INNMan, string EDRPOUMan, string MFOMan, string RRMan, string BankMan);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteManufacturer", ReplyAction="http://tempuri.org/IService/DeleteManufacturerResponse")]
        void DeleteManufacturer(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteManufacturer", ReplyAction="http://tempuri.org/IService/DeleteManufacturerResponse")]
        System.Threading.Tasks.Task DeleteManufacturerAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindManufacturerById", ReplyAction="http://tempuri.org/IService/FindManufacturerByIdResponse")]
        ShopControlClient.ServiceReference1.ManufacturerCatalog FindManufacturerById(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/FindManufacturerById", ReplyAction="http://tempuri.org/IService/FindManufacturerByIdResponse")]
        System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ManufacturerCatalog> FindManufacturerByIdAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewGroup", ReplyAction="http://tempuri.org/IService/AddNewGroupResponse")]
        void AddNewGroup(string NameGroup, int idParent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewGroup", ReplyAction="http://tempuri.org/IService/AddNewGroupResponse")]
        System.Threading.Tasks.Task AddNewGroupAsync(string NameGroup, int idParent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ProductGroupList", ReplyAction="http://tempuri.org/IService/ProductGroupListResponse")]
        ShopControlClient.ServiceReference1.ProductGroup[] ProductGroupList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ProductGroupList", ReplyAction="http://tempuri.org/IService/ProductGroupListResponse")]
        System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ProductGroup[]> ProductGroupListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteGroup", ReplyAction="http://tempuri.org/IService/DeleteGroupResponse")]
        int DeleteGroup(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteGroup", ReplyAction="http://tempuri.org/IService/DeleteGroupResponse")]
        System.Threading.Tasks.Task<int> DeleteGroupAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateGroup", ReplyAction="http://tempuri.org/IService/UpdateGroupResponse")]
        void UpdateGroup(int _id, string NameGroup, int idParent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateGroup", ReplyAction="http://tempuri.org/IService/UpdateGroupResponse")]
        System.Threading.Tasks.Task UpdateGroupAsync(int _id, string NameGroup, int idParent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ProductCatalogList", ReplyAction="http://tempuri.org/IService/ProductCatalogListResponse")]
        ShopControlClient.ServiceReference1.ProductsCatalog[] ProductCatalogList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ProductCatalogList", ReplyAction="http://tempuri.org/IService/ProductCatalogListResponse")]
        System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ProductsCatalog[]> ProductCatalogListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewProduct", ReplyAction="http://tempuri.org/IService/AddNewProductResponse")]
        void AddNewProduct(string NameProduct, int idGroup, int idManufacturer, string MarkingProduct, float PurchPriceProduct, float PriceProduct, string DescriptionProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddNewProduct", ReplyAction="http://tempuri.org/IService/AddNewProductResponse")]
        System.Threading.Tasks.Task AddNewProductAsync(string NameProduct, int idGroup, int idManufacturer, string MarkingProduct, float PurchPriceProduct, float PriceProduct, string DescriptionProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SearchByGroup", ReplyAction="http://tempuri.org/IService/SearchByGroupResponse")]
        ShopControlClient.ServiceReference1.ProductsCatalog[] SearchByGroup(string Group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SearchByGroup", ReplyAction="http://tempuri.org/IService/SearchByGroupResponse")]
        System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ProductsCatalog[]> SearchByGroupAsync(string Group);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ShopControlClient.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ShopControlClient.ServiceReference1.IService>, ShopControlClient.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddNewClient(string NameCl, string DescriptionCl, int DiscountCl, int CardNumberCl, string PhoneNumberCl, System.DateTime BirthDateCl) {
            base.Channel.AddNewClient(NameCl, DescriptionCl, DiscountCl, CardNumberCl, PhoneNumberCl, BirthDateCl);
        }
        
        public System.Threading.Tasks.Task AddNewClientAsync(string NameCl, string DescriptionCl, int DiscountCl, int CardNumberCl, string PhoneNumberCl, System.DateTime BirthDateCl) {
            return base.Channel.AddNewClientAsync(NameCl, DescriptionCl, DiscountCl, CardNumberCl, PhoneNumberCl, BirthDateCl);
        }
        
        public ShopControlClient.ServiceReference1.ClientCatalog[] ClientCatalogList() {
            return base.Channel.ClientCatalogList();
        }
        
        public System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ClientCatalog[]> ClientCatalogListAsync() {
            return base.Channel.ClientCatalogListAsync();
        }
        
        public void UpdateClient(int IdCl, string NameCl, string DescriptionCl, int DiscountCl, int CardNumberCl, string PhoneNumberCl, System.DateTime BirthDateCl) {
            base.Channel.UpdateClient(IdCl, NameCl, DescriptionCl, DiscountCl, CardNumberCl, PhoneNumberCl, BirthDateCl);
        }
        
        public System.Threading.Tasks.Task UpdateClientAsync(int IdCl, string NameCl, string DescriptionCl, int DiscountCl, int CardNumberCl, string PhoneNumberCl, System.DateTime BirthDateCl) {
            return base.Channel.UpdateClientAsync(IdCl, NameCl, DescriptionCl, DiscountCl, CardNumberCl, PhoneNumberCl, BirthDateCl);
        }
        
        public ShopControlClient.ServiceReference1.ClientCatalog FindClientById(int _id) {
            return base.Channel.FindClientById(_id);
        }
        
        public System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ClientCatalog> FindClientByIdAsync(int _id) {
            return base.Channel.FindClientByIdAsync(_id);
        }
        
        public void DeleteClient(int _id) {
            base.Channel.DeleteClient(_id);
        }
        
        public System.Threading.Tasks.Task DeleteClientAsync(int _id) {
            return base.Channel.DeleteClientAsync(_id);
        }
        
        public ShopControlClient.ServiceReference1.ManufacturerCatalog[] ManufacturerCatalogList() {
            return base.Channel.ManufacturerCatalogList();
        }
        
        public System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ManufacturerCatalog[]> ManufacturerCatalogListAsync() {
            return base.Channel.ManufacturerCatalogListAsync();
        }
        
        public void AddNewManufacturer(string NameMan, string PhoneMan, string EmailMan, string WebsiteMan, bool IsRealizMan, string INNMan, string EDRPOUMan, string MFOMan, string RRMan, string BankMan) {
            base.Channel.AddNewManufacturer(NameMan, PhoneMan, EmailMan, WebsiteMan, IsRealizMan, INNMan, EDRPOUMan, MFOMan, RRMan, BankMan);
        }
        
        public System.Threading.Tasks.Task AddNewManufacturerAsync(string NameMan, string PhoneMan, string EmailMan, string WebsiteMan, bool IsRealizMan, string INNMan, string EDRPOUMan, string MFOMan, string RRMan, string BankMan) {
            return base.Channel.AddNewManufacturerAsync(NameMan, PhoneMan, EmailMan, WebsiteMan, IsRealizMan, INNMan, EDRPOUMan, MFOMan, RRMan, BankMan);
        }
        
        public void UpdateManufacturer(int _id, string NameMan, string PhoneMan, string EmailMan, string WebsiteMan, bool IsRealizMan, string INNMan, string EDRPOUMan, string MFOMan, string RRMan, string BankMan) {
            base.Channel.UpdateManufacturer(_id, NameMan, PhoneMan, EmailMan, WebsiteMan, IsRealizMan, INNMan, EDRPOUMan, MFOMan, RRMan, BankMan);
        }
        
        public System.Threading.Tasks.Task UpdateManufacturerAsync(int _id, string NameMan, string PhoneMan, string EmailMan, string WebsiteMan, bool IsRealizMan, string INNMan, string EDRPOUMan, string MFOMan, string RRMan, string BankMan) {
            return base.Channel.UpdateManufacturerAsync(_id, NameMan, PhoneMan, EmailMan, WebsiteMan, IsRealizMan, INNMan, EDRPOUMan, MFOMan, RRMan, BankMan);
        }
        
        public void DeleteManufacturer(int _id) {
            base.Channel.DeleteManufacturer(_id);
        }
        
        public System.Threading.Tasks.Task DeleteManufacturerAsync(int _id) {
            return base.Channel.DeleteManufacturerAsync(_id);
        }
        
        public ShopControlClient.ServiceReference1.ManufacturerCatalog FindManufacturerById(int _id) {
            return base.Channel.FindManufacturerById(_id);
        }
        
        public System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ManufacturerCatalog> FindManufacturerByIdAsync(int _id) {
            return base.Channel.FindManufacturerByIdAsync(_id);
        }
        
        public void AddNewGroup(string NameGroup, int idParent) {
            base.Channel.AddNewGroup(NameGroup, idParent);
        }
        
        public System.Threading.Tasks.Task AddNewGroupAsync(string NameGroup, int idParent) {
            return base.Channel.AddNewGroupAsync(NameGroup, idParent);
        }
        
        public ShopControlClient.ServiceReference1.ProductGroup[] ProductGroupList() {
            return base.Channel.ProductGroupList();
        }
        
        public System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ProductGroup[]> ProductGroupListAsync() {
            return base.Channel.ProductGroupListAsync();
        }
        
        public int DeleteGroup(int _id) {
            return base.Channel.DeleteGroup(_id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteGroupAsync(int _id) {
            return base.Channel.DeleteGroupAsync(_id);
        }
        
        public void UpdateGroup(int _id, string NameGroup, int idParent) {
            base.Channel.UpdateGroup(_id, NameGroup, idParent);
        }
        
        public System.Threading.Tasks.Task UpdateGroupAsync(int _id, string NameGroup, int idParent) {
            return base.Channel.UpdateGroupAsync(_id, NameGroup, idParent);
        }
        
        public ShopControlClient.ServiceReference1.ProductsCatalog[] ProductCatalogList() {
            return base.Channel.ProductCatalogList();
        }
        
        public System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ProductsCatalog[]> ProductCatalogListAsync() {
            return base.Channel.ProductCatalogListAsync();
        }
        
        public void AddNewProduct(string NameProduct, int idGroup, int idManufacturer, string MarkingProduct, float PurchPriceProduct, float PriceProduct, string DescriptionProduct) {
            base.Channel.AddNewProduct(NameProduct, idGroup, idManufacturer, MarkingProduct, PurchPriceProduct, PriceProduct, DescriptionProduct);
        }
        
        public System.Threading.Tasks.Task AddNewProductAsync(string NameProduct, int idGroup, int idManufacturer, string MarkingProduct, float PurchPriceProduct, float PriceProduct, string DescriptionProduct) {
            return base.Channel.AddNewProductAsync(NameProduct, idGroup, idManufacturer, MarkingProduct, PurchPriceProduct, PriceProduct, DescriptionProduct);
        }
        
        public ShopControlClient.ServiceReference1.ProductsCatalog[] SearchByGroup(string Group) {
            return base.Channel.SearchByGroup(Group);
        }
        
        public System.Threading.Tasks.Task<ShopControlClient.ServiceReference1.ProductsCatalog[]> SearchByGroupAsync(string Group) {
            return base.Channel.SearchByGroupAsync(Group);
        }
    }
}
